<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hjgx.mapper.UserBusinessMapper">
    <resultMap id="BaseResultMap" type="cn.hjgx.entity.UserBusiness">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
      id, nickname, username, password, create_time, last_login_time, last_login_ip, status
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_user_business
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
      delete from t_user_business
      where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.hjgx.entity.UserBusiness">
    insert into t_user_business (id, nickname, username,
      password, create_time, last_login_time,
      last_login_ip, status)
    values (#{id,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP},
      #{lastLoginIp,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="cn.hjgx.entity.UserBusiness">
        insert into t_user_business
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="lastLoginIp != null">
                last_login_ip,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginIp != null">
                #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.hjgx.entity.UserBusiness">
        update t_user_business
        <set>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginIp != null">
                last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.hjgx.entity.UserBusiness">
        update t_user_business
        set nickname = #{nickname,jdbcType=VARCHAR},
          username = #{username,jdbcType=VARCHAR},
          password = #{password,jdbcType=VARCHAR},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
          last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
          status = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updatePasswordByPrimary">
        update t_user_business
        set
        password = #{1,jdbcType=VARCHAR}
        where id = #{0,jdbcType=INTEGER}
    </update>

    <select id="validateUser" resultMap="BaseResultMap" parameterType="cn.hjgx.entity.UserBusiness">
        select
        <include refid="Base_Column_List"/>
        from t_user_business
        where 1 = 1
        AND username = #{username,jdbcType=VARCHAR}
        AND password = md5(#{username,jdbcType=VARCHAR} || #{password,jdbcType=VARCHAR})
    </select>

    <select id="selectByPageParam" resultMap="BaseResultMap" parameterType="cn.hjgx.entity.UserBusiness">
        select
        <include refid="Base_Column_List"/>
        from t_user_business
        where 1 = 1
        <if test="nickname != null">
            AND nickname like '%' || #{nickname,jdbcType=VARCHAR} || '%'
        </if>
        <if test="username != null">
            AND username like '%' || #{username,jdbcType=VARCHAR} || '%'
        </if>
        <if test="status != null">
            AND status = #{status,jdbcType=INTEGER},
        </if>
    </select>

</mapper>